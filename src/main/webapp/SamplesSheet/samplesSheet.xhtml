<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"    
                xmlns:p="http://primefaces.org/ui"              
                template="/template.xhtml"> 

    <ui:define name="samplesSheet">
      
        <h:form id="samplesSheetTable">
         
   
        
        <p:dataTable id="sampleTable" var="listed" value="#{samplesSheetBean.runList}" widgetVar="samplesTable"
                     style="font-size: x-small;" paginator="true" rows="20"
                     paginatorTemplate="{FirstPageLink} {PreviousPageLink} {RowsPerPageDropdown}
                                        {CurrentPageReport} {NextPageLink} {LastPageLink}"
                     emptyMessage="#{bundle['samplesheet.emptymessage']}"   
                     filteredValue="#{filterBean.libraryRun}">
            
            <p:column id="idRunsColumn" filterBy="#{listed.id.runId}"                     
                      headerText="#{bundle['samplesheet.run.id']}"
                      filterMatchMode="contains">
                        <h:link value="#{listed.id.runId}" outcome="/Run/runDetails.jsf">
                            <f:param name="rid" value="#{listed.id.runId}"/>                                                   
                        </h:link>
                        
            </p:column>
            
            
            <p:column id="laneColumn" filterBy="#{listed.allLanesToString}"                      
                      headerText="#{bundle['samplesheet.lane']}"
                      filterMatchMode="contains">
                 <h:outputText value="#{listed.allLanesToString}" />
            </p:column>
            
            <!--
            <p:column id="seqindexColumn" filterBy="{listed.sample.sequencingIndexes.index}"                      
                      headerText="{bundle['samplesheet.index']}"
                      filterMatchMode="contains">
                 <h:outputText value="{listed.sample.sequencingIndexes.index}" />
            </p:column>    
            -->
            
            <p:column id="seqindexColumn1" filterBy="#{listed.sample.sequencingIndex1}"                      
                      headerText="#{bundle['samplesheet.index1']}"
                      filterMatchMode="contains">
                 <h:outputText value="#{listed.sample.sequencingIndex1}" />
            </p:column>    
            
            <p:column id="seqindexColumn2" filterBy="#{listed.sample.sequencingIndex2}"                      
                      headerText="#{bundle['samplesheet.index2']}"
                      filterMatchMode="contains">
                 <h:outputText value="#{listed.sample.sequencingIndex2}" />
            </p:column>

            <p:column id="nameColumn" filterBy="#{listed.sample.name}"                     
                      headerText="#{bundle['samplesheet.name']}"
                      filterMatchMode="contains"> 
                
                 <h:outputText value="#{listed.sample.name}"/> 
           </p:column>
            
            <p:column id="libNameColumn" filterBy="#{listed.sample.libraryName}"                      
                      headerText="#{bundle['samplesheet.library']}"
                      filterMatchMode="contains">
                 <h:outputText value="#{listed.sample.libraryName}" />
            </p:column>   
            
            <p:column id="libSizeColumn" filterBy="#{listed.sample.bulkFragmentSize}"                      
                      headerText="#{bundle['samplesheet.librarysize']}"
                      filterMatchMode="contains">
                 <h:outputText value="#{listed.sample.bulkFragmentSize}" />
            </p:column>   
            
            <!--
            
             
            <p:column id="userColumn" filterBy="{listed.sample.user.login}"                      
                      headerText="{bundle['samplesheet.requester']}"
                      filterMatchMode="contains">
                 <h:outputText value="{listed.sample.user.login}" />
            </p:column>
            
            <p:column id="flowcellColumn" filterBy="{listed.flowcell}"                      
                      headerText="{bundle['samplesheet.flowcell']}"
                      filterMatchMode="contains">
                 <h:outputText value="{listed.flowcell}" />
            </p:column>
            
            
            
            
            
            <p:column id="isControlColumn" filterBy="{listed.isControl}"                      
                      headerText="{bundle['samplesheet.is.control']}"
                      filterMatchMode="contains">
                 <h:outputText value="{listed.isControl}" />
            </p:column>
            
            <p:column id="applicationColumn" filterBy="{listed.sample.application.applicationname}"                      
                      headerText="{bundle['samplesheet.application.name']}"
                      filterMatchMode="contains">
                 <h:outputText value="{listed.sample.application.applicationname}" />
            </p:column>
            
            <p:column id="genomeColumn" headerText="{bundle['samplesheet.default.genome']}">
                <h:outputText value="{preferences.getDefGenome(listed.sample)}" />
            </p:column>
            
            <p:column id="operatorColumn" filterBy="{listed.user.login}"                      
                      headerText="{bundle['samplesheet.operator']}"
                      filterMatchMode="contains">
                 <h:outputText value="{listed.user.login}" />
            </p:column>
            -->
             
         </p:dataTable>
            
            <h:panelGrid columns="2">
                <p:panel header="#{bundle['export.All']}">
                    <h:commandLink>
                        <p:graphicImage value="/img/csv.png" />
                        <p:dataExporter type="csv" target="sampleTable" fileName="SampleSheet" pageOnly="false" />
                    </h:commandLink>

                </p:panel>
                
                <p:panel header="#{bundle['export.Page']}">
                    <h:commandLink>
                        <p:graphicImage value="/img/csv.png" />
                        <p:dataExporter type="csv" target="sampleTable" fileName="SampleSheet" pageOnly="true" />
                    </h:commandLink>

                </p:panel>

            </h:panelGrid> 
        </h:form>
        
    </ui:define>

</ui:composition>