<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"    
                xmlns:p="http://primefaces.org/ui"
                template="/template.xhtml">

    <ui:define name="sampleRequest">

        <h:form id="requestWizard">
            <p:messages id="formMessages" for="validationMessages"/>
            <h:panelGroup id="wizNav">
                <div class="ui-g">
                    <div class="ui-g-2"/>
                    <div class="ui-g-2" style="text-align:right">
                        <p:commandButton 
                            icon="ui-icon-arrow-1-w"
                            iconPos="left"
                            value="Back" 
                            onclick="PF('theWiz').back();" 
                            update="wizNav"
                            rendered="#{requestBean.wizStep!='personal'}"/>
                    </div>
                    <div class="ui-g-4" style="text-align: center;">
                        <p:outputPanel styleClass="wizard-custom-title #{requestBean.wizStep=='personal' ? 'wizard-custom-highlight' : 'wizard-custom-default'}">Requestor</p:outputPanel>
                        <p:outputPanel styleClass="wizard-custom-title #{requestBean.wizStep=='samples' ? 'wizard-custom-highlight' : 'wizard-custom-default'}">Samples</p:outputPanel>
                        <p:outputPanel styleClass="wizard-custom-title #{requestBean.wizStep=='libraries' ? 'wizard-custom-highlight' : 'wizard-custom-default'}">Libraries</p:outputPanel>
                    </div>
                    <div class="ui-g-2">
                        <p:commandButton 
                            icon="ui-icon-arrow-1-e"
                            iconPos="right"
                            value="Next" 
                            onclick="PF('theWiz').next();" 
                            update="wizNav"
                            rendered="#{requestBean.wizStep!='libraries'}"/>
                        <p:commandButton
                            icon="ui-icon-disk"
                            iconPos="right"
                            id="wizSubmitButton"
                            value="Submit" 
                            rendered="#{requestBean.wizStep=='libraries'}"/>
                    </div>
                    <div class="ui-g-2" />
                </div>
            </h:panelGroup>

            <p:wizard widgetVar="theWiz" flowListener="#{requestBean.onFlowProcess}" showNavBar="false" showStepStatus="false">
                
                <p:tab id="personal" title="Personal" >
                    <div style="width: 100%; text-align:center" >
                    <p:panelGrid columns="3" styleClass="wizard-panel-grid" >
                        
                         <p:outputPanel style="display:inline-block"/>
                         <p:outputPanel style="display:inline-block"/>
                         <p:outputPanel style="display:inline-block"/>
                        
                         <p:outputPanel style="display:inline-block">
                            <h:outputText style="font-family: 'sysbold';color: #40b9d4;font-size:2.1vh" value="Requestor" />
                         </p:outputPanel>                       
                                                <p:outputPanel style="display:inline-block"/>

                        <p:outputPanel style="display:inline-block"/>
                        
                        <h:outputLabel for="userName" value="User Name: " />
                        <h:outputText style="width:300px;"  id="userName" value="#{requestBean.request.requestor.user.userName}"/>
                        <p:message for="userName" />

                        <h:outputLabel for="userEmail" value="User Email: " />
                        <h:outputText style="width:300px;"  id="userEmail" value="#{requestBean.request.requestor.user.mailAddress}"/>
                        <p:message for="userEmail" />

                        <h:outputLabel for="userPhone" value="User Phone: " />
                        <h:outputText style="width:300px;"  id="userPhone" value="#{requestBean.request.requestor.user.phone}"/>
                        <p:message for="userPhone" />
                            
                        <p:outputPanel style="display:inline-block"/>
                         <p:outputPanel style="display:inline-block"/>
                         <p:outputPanel style="display:inline-block"/>
                        
                         <p:outputPanel style="display:inline-block">
                            <h:outputText style="font-family: 'sysbold';color: #40b9d4;font-size:2.1vh" value="Principal Investigator" />
                         </p:outputPanel>                       
                        <p:separator />
                        <p:outputPanel style="display:inline-block"/>
                        
                        <h:outputLabel for="userPiName" value="Principal Investigator: " />
                        <h:outputText style="width:300px;"  id="userPiName" value="#{requestBean.request.requestor.pi.userName}"/>
                        <p:message for="userPiName" />

                        <h:outputLabel for="userPiEmail" value="Principal Investigator Email: " />
                        <h:outputText style="width:300px;"  id="userPiEmail" value="#{requestBean.request.requestor.pi.mailAddress}"/>
                        <p:message for="userPiEmail" />

                        <h:outputLabel for="userPiPhone" value="Principal Investigator Phone: " />
                        <h:outputText style="width:300px;"  id="userPiPhone" value="#{requestBean.request.requestor.pi.phone}"/>
                        <p:message for="userPiPhone" />         
                        
                         <p:outputPanel style="display:inline-block"/>
                         <p:outputPanel style="display:inline-block"/>
                         <p:outputPanel style="display:inline-block"/>
                        
                         <p:outputPanel style="display:inline-block">
                            <h:outputText style="font-family: 'sysbold';color: #40b9d4;font-size: 2.1vh" value="Affiliation Details" />
                         </p:outputPanel>                       
                        <p:separator />
                        <p:outputPanel style="display:inline-block"/>
                        
                        <p:outputLabel for="orgaName" value="Organization: " />
                        <p:inputText style="width:300px;"  id="orgaName" value="#{requestBean.request.requestor.affiliation.name}"/>
                        <p:message for="orgaName" />      

                        <p:outputLabel for="orgaDept" value="Department " />
                        <p:inputText style="width:300px;"  id="orgaDept" value="#{requestBean.request.requestor.affiliation.department}"/>
                        <p:message for="orgaDept" />   

                        <p:outputLabel for="orgaAddress" value="Address: " />
                        <p:inputText style="width:300px;"  id="orgaAddress" value="#{requestBean.request.requestor.affiliation.address}"/>
                        <p:message for="orgaAddress" />   

                        <p:outputLabel for="orgaUrl" value="URL: " />
                        <p:inputText style="width:300px;"  id="orgaUrl" value="#{requestBean.request.requestor.affiliation.url}"/>
                        <p:message for="orgaUrl" />   

                    </p:panelGrid>
                    </div>
                </p:tab>
                <p:tab id="samples" title="samples">
                    <p:inputText id="samplesData" type="hidden" widgetVar="tableData" value="#{requestBean.samples}" >    
                        <p:ajax event="change" update="@this sampleMessage :requestWizard:libraryData" oncomplete="refresh()" partialSubmit="true"/>
                    </p:inputText>
                    <p:messages for="sampleMessage" id="sampleMessage" showDetail="true" closable="true" />

                    <div id="example"/>
                    <script type="text/javascript">
                        var data;
                        var $ = jQuery;
                        var table;

                        var refresh = function () {
                            data = JSON.parse(PF('tableData').getJQ().val());
                            console.log('AJAX action completed with data ' + JSON.stringify(data));
                            table.loadData(data);
                        }

                        var dataChangeCallback = function (change, source) {
                            if (source === 'loadData') {
                                return; //don't save this change
                            }
                            console.log('Setting data ' + JSON.stringify(data));
                            cleanedData = [];
                            $.each(data, function (rowKey, object) {
                                if (!table.isEmptyRow(rowKey))
                                    cleanedData.push(object);
                            });
                            PF('tableData').getJQ().val(JSON.stringify(cleanedData));
                            console.log('trigger change');
                            PF('tableData').getJQ().change();
                        }

                        $(document).ready(function () {
                            data = JSON.parse(PF('tableData').getJQ().val());
                            var container = document.getElementById('example');
                            var settings = {
                                data: data,
                                columns: [
                                    {
                                        data: 'sampleName',
                                        type: 'text'
                                    },
                                    {
                                        data: 'sampleDescription',
                                        type: 'text'
                                    },
                                    {
                                        data: 'organism',
                                        type: 'text'
                                    },
                                    {
                                        data: 'library',
                                        type: 'text'

                                    },
                                    {
                                        data: 'i7Index',
                                        type: 'text'
                                    },
                                    {
                                        data: 'i7Adapter',
                                        type: 'text'
                                    },
                                    {
                                        data: 'i5Index',
                                        type: 'text'
                                    },
                                    {
                                        data: 'i5Adapter',
                                        type: 'text'
                                    },
                                    {
                                        data: 'primerType',
                                        type: 'text'
                                    },
                                    {
                                        data: 'primerName',
                                        type: 'text'
                                    },
                                    {
                                        data: 'primerSequence',
                                        type: 'text'
                                    }

                                ],
                                rowHeaders: true,
                                colHeaders: ['Sample Name', 'Sample Description', 'Organism', 'Library Name', 'Barcode Sequence i7', 'Library Adapter i7', 'Barcode Sequence i5', 'Library Adapter i5', 'Sequencing Primer Type', 'Custom Sequencing Primer Name', 'Custom Sequencing Primer Sequence'],
                                contextMenu: true,
                                manualRowResize: true,
                                minSpareRows: 1,
                                afterChange: dataChangeCallback,
                                afterRemoveRow: dataChangeCallback
                            };

                            table = new Handsontable(container, settings);
                        });

                    </script>  
                </p:tab>

                <p:tab id="libraries" title="Libraries">
                    <p:inputText id="libraryData" type="hidden" widgetVar="tableDataLib" value="#{requestBean.libraries}" >    
                        <p:ajax event="change" update="@this libraryMessage :requestWizard:samplesData" oncomplete="refreshLib()" partialSubmit="true"/>
                    </p:inputText>
                    <p:messages for="libraryMessage" id="libraryMessage" showDetail="true" closable="true" />

                    <div id="exampleLib" />
                    <script type="text/javascript">
                        var dataLib;
                        var $ = jQuery;
                        var tableLib;

                        var refreshLib = function () {
                            dataLib = JSON.parse(PF('tableDataLib').getJQ().val());
                            console.log('AJAX action completed with data ' + JSON.stringify(dataLib));
                            tableLib.loadData(dataLib);
                        };

                        var dataChangeCallback = function (change, source) {
                            if (source === 'loadData') {
                                return; //don't save this change
                            }
                            console.log('Setting data ' + JSON.stringify(dataLib));
                            cleanedDataLib = [];
                            $.each(dataLib, function (rowKey, object) {
                                if (!tableLib.isEmptyRow(rowKey))
                                    cleanedDataLib.push(object);
                            });
                            PF('tableDataLib').getJQ().val(JSON.stringify(cleanedDataLib));
                            console.log('trigger change');
                            PF('tableDataLib').getJQ().change();
                        }

                        $(document).ready(function () {
                            dataLib = JSON.parse(PF('tableDataLib').getJQ().val());
                            var container = document.getElementById('exampleLib');
                            var settings = {
                                data: dataLib,
                                columns: [
                                    {
                                        data: 'name',
                                        type: 'text'
                                    },
                                    {
                                        data:'type',
                                        type:'text'
                                    },
                                    {
                                        data:'readMode',
                                        type:'dropdown',
                                        source:['PE','SR']
                                    },
                                    {
                                        data:'readLength',
                                        type:'numeric'
                                    },
                                     {
                                        data:'lanes',
                                        type:'numeric'
                                    },
                                     {
                                        data:'volume',
                                        type:'numeric'
                                    },
                                     {
                                        data:'dnaConcentration',
                                        type:'numeric'
                                    },
                                     {
                                        data:'totalSize',
                                        type:'numeric'
                                    }],
                                rowHeaders: true,
                                colHeaders: ['Library Name','Application','Read Mode','Read Length','Lanes','Volume','DNA Concentration','Total size'],
                                manualRowResize: true,
                                minSpareRows: 0,
                                afterChange: dataChangeCallback,
                                afterRemoveRow: dataChangeCallback,
                                afterCreateRow: function (index, numberOfRows) {
                                    dataLib.splice(index, numberOfRows);
                                }
                            };

                            tableLib = new Handsontable(container, settings);
                        });

                    </script>  
                </p:tab>

            </p:wizard>


        </h:form>



    </ui:define>

</ui:composition>