<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"    
                xmlns:p="http://primefaces.org/ui"
                template="/template.xhtml">

    <ui:define name="sampleRequest">
        
        <p:confirmDialog global="true">
            <h:form>
                <p:commandButton value="Yes" type="button"
                                 styleClass="ui-confirmdialog-yes" icon="ui-icon-check" update=":menuForm:messages"/>
                <p:commandButton value="No" type="button"
                                 styleClass="ui-confirmdialog-no" icon="ui-icon-close" />
            </h:form>
        </p:confirmDialog>
        
        
        <p:dialog widgetVar="uploadDialog" modal="true" appendTo = "@(body)" resizable="false">
            <f:facet name="header">
                <h:outputText id="uploadDialogHeader" value="#{uploadSampleSheetBean.fileName}"/>
            </f:facet>
            <h:form id="uploadDialog">
                <p:messages id="messages" for="uploadDialogMsg" showDetail="true" autoUpdate="false" closable="false" />
                <br /><br/>
                <div style="width:100%;text-align: center;">
                    <p:commandButton 
                        widgetVar='okButton'
                        value="OK"
                        styleClass="ui-confirmdialog-yes" 
                        icon="ui-icon-check" 
                        onclick="PF('uploadDialog').hide()"
                        update="@all"/>
                </div>
            </h:form>
        </p:dialog>
        
        <h:form id="requestWizard">
            <p:messages id="formMessages" for="informationMessages" showDetail="true"/>
            <p:messages id="submitMessages" for="validationMessages" showDetail="true" closable="true"/>

            <div class="ui-g">
                <div class="ui-g-8"/>
                <div class="ui-g-4">

                    <p:commandButton style="float:right;margin:1px;font-size: x-small;" 
                                     value="Upload in LIMS" 
                                     icon="ui-icon-arrow-1-n"
                                     rendered="#{requestBean.roleManager.hasSampleLoadPermission()
                                                 and requestBean.editable
                                                 and not requestBean.newRequest}"
                                     action = "#{uploadLIMSRequestBean.submitToLims()}"
                                     update ="@all">
                            <p:confirm header="Confirmation"
                                       message="Are you sure to save all changes and upload this request to LIMS?"
                                       icon="ui-icon-alert" />
                    </p:commandButton>

                    <p:commandButton style="float:right;margin:1px;font-size: x-small;" 
                                     value="Delete" 
                                     icon="ui-icon-trash"
                                     action ="#{requestBean.deleteRequest()}"
                                     rendered="#{requestBean.roleManager.hasAnnotationSheetDeletePermission() 
                                                 and requestBean.editable 
                                                 and not requestBean.newRequest}" >
                               <p:confirm header="Confirmation"
                                       message="Are you sure to Delete this request?"
                                       icon="ui-icon-alert" />
                    </p:commandButton>

                    <p:button style="float:right;margin:1px;font-size: x-small;" 
                              outcome="sampleRequest"
                              value="Reload" 
                              icon="ui-icon-arrowrefresh-1-e"
                               rendered="#{requestBean.editable and not requestBean.newRequest}" >
                            <f:param name="rid" value="#{requestBean.request.requestId}" />
                            <f:param name="activeMenu" value="4" />
                    </p:button>

                </div>
            </div>
                
            <p:separator />
            
            <h:panelGroup id="wizNav">
                <div class="ui-g">
                    <div class="ui-g-2"/>
                    <div class="ui-g-2" style="text-align:right">

                     <p:fileUpload style="float:left;margin:1px"
                                   fileUploadListener="#{uploadSampleSheetBean.handleFileUpload}"
                                   label="Upload Excel" multiple="false" mode="advanced" auto="true"
                                   sizeLimit="100000000" allowTypes="/(\.|\/)(xls|xlsx)$/"
                                   oncomplete="PF('uploadDialog').show()"
                                   update="@this :uploadDialog :uploadDialog:messages :uploadDialogHeader" 
                                   rendered="#{requestBean.wizStep=='personal' and requestBean.newRequest}"/>
                 
                        <p:commandButton 
                            icon="ui-icon-arrow-1-w" 
                            iconPos="left"
                            value="Back" 
                            onclick="PF('theWiz').back();" 
                            update="wizNav :requestWizard:sampleMessage :requestWizard:libraryMessage"
                            rendered="#{requestBean.wizStep!='personal'}"/>
                    </div>
                    <div class="ui-g-4" style="text-align: center;">
                        <p:outputPanel styleClass="wizard-custom-title #{requestBean.wizStep=='personal' ? 'wizard-custom-highlight' : 'wizard-custom-default'}">Request</p:outputPanel>
                        <p:outputPanel styleClass="wizard-custom-title #{requestBean.wizStep=='samples' ? 'wizard-custom-highlight' : 'wizard-custom-default'}">Samples</p:outputPanel>
                        <p:outputPanel styleClass="wizard-custom-title #{requestBean.wizStep=='libraries' ? 'wizard-custom-highlight' : 'wizard-custom-default'}">Libraries</p:outputPanel>
                    </div>
                    <div class="ui-g-2">
                        <p:commandButton 
                            icon="ui-icon-arrow-1-e"
                            iconPos="right"
                            value="Next" 
                            onclick="PF('theWiz').next();" 
                            update="wizNav :requestWizard:sampleMessage :requestWizard:libraryMessage"
                            rendered="#{requestBean.wizStep!='libraries'}"/>
                        <p:commandButton
                            icon="ui-icon-disk"
                            iconPos="right"
                            id="wizSubmitButton"
                            value="#{requestBean.newRequest ? 'Submit' : 'Update'}" 
                            action ="#{requestBean.submitAndRedirect()}"
                            update="@all"
                            rendered="#{requestBean.wizStep=='libraries' and requestBean.editable}">
                           <p:confirm header="Confirmation"
                                       message="Are you sure to #{requestBean.newRequest ? 'Submit' : 'Update'} this request?"
                                       icon="ui-icon-alert" />
                        </p:commandButton>
                    </div>
                    <div class="ui-g-2" />
                </div>
            </h:panelGroup>

            <p:wizard widgetVar="theWiz" flowListener="#{requestBean.onFlowProcess}" showNavBar="false" showStepStatus="false">

                <p:tab id="personal" title="Personal" >
                    <div style="width: 100%; text-align:center" >
                        <p:panelGrid columns="3" styleClass="wizard-panel-grid" >
                            
                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>

                            <p:outputPanel style="display:inline-block">
                                <h:outputText style="font-family: 'sysbold';color: #40b9d4;font-size:2.1vh" value="Request" />
                            </p:outputPanel>                       
                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>
                            
                            <h:outputLabel for="requestId" value="Request Id: " />
                            <h:outputText style="width:300px;"  id="requestId" value="#{requestBean.request.requestId}"/>
                            <p:message for="requestId" />
                            
                            <h:outputLabel for="requestStatus" value="Request Status: " />
                            <h:outputText style="width:300px;"  id="requestStatus" value="#{requestBean.request.status}"/>
                            <p:message for="requestStatus" />                           

                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>

                            <p:outputPanel style="display:inline-block">
                                <h:outputText style="font-family: 'sysbold';color: #40b9d4;font-size:2.1vh" value="Requestor" />
                            </p:outputPanel>                       
                            <p:separator/>
                            <p:outputPanel style="display:inline-block"/>

                            <h:outputLabel for="userName" value="User Name: " />
                            <h:outputText style="width:300px;"  id="userName" value="#{requestBean.request.requestor.user.userName}"/>
                            <p:message for="userName" />

                            <h:outputLabel for="userEmail" value="User Email: " />
                            <h:outputText style="width:300px;"  id="userEmail" value="#{requestBean.request.requestor.user.mailAddress}"/>
                            <p:message for="userEmail" />

                            <h:outputLabel for="userPhone" value="User Phone: " />
                            <h:outputText style="width:300px;"  id="userPhone" value="#{requestBean.request.requestor.user.phone}"/>
                            <p:message for="userPhone" />

                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>

                            <p:outputPanel style="display:inline-block">
                                <h:outputText style="font-family: 'sysbold';color: #40b9d4;font-size:2.1vh" value="Principal Investigator" />
                            </p:outputPanel>                       
                            <p:separator />
                            <p:outputPanel style="display:inline-block"/>

                            <h:outputLabel for="userPiName" value="Principal Investigator: " />
                            <h:outputText style="width:300px;"  id="userPiName" value="#{requestBean.request.requestor.pi.userName}"/>
                            <p:message for="userPiName" />

                            <h:outputLabel for="userPiEmail" value="Principal Investigator Email: " />
                            <h:outputText style="width:300px;"  id="userPiEmail" value="#{requestBean.request.requestor.pi.mailAddress}"/>
                            <p:message for="userPiEmail" />

                            <h:outputLabel for="userPiPhone" value="Principal Investigator Phone: " />
                            <h:outputText style="width:300px;"  id="userPiPhone" value="#{requestBean.request.requestor.pi.phone}"/>
                            <p:message for="userPiPhone" />         

                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>
                            <p:outputPanel style="display:inline-block"/>

                            <p:outputPanel style="display:inline-block">
                                <h:outputText style="font-family: 'sysbold';color: #40b9d4;font-size: 2.1vh" value="Affiliation Details" />
                            </p:outputPanel>                       
                            <p:separator />
                            <p:outputPanel style="display:inline-block"/>

                            <p:outputLabel for="orgaName" value="Organization: " />
                            <h:outputText style="width:300px;"  id="orgaName" value="#{requestBean.request.requestor.user.affiliation.organizationName}"/>
                            <p:message for="orgaName" />      

                            <p:outputLabel for="orgaDept" value="Department " />
                            <h:outputText style="width:300px;"  id="orgaDept" value="#{requestBean.request.requestor.user.affiliation.departmentName}"/>
                            <p:message for="orgaDept" />   

                            <p:outputLabel for="orgaAddress" value="Address: " />
                            <h:outputText style="width:300px;"  id="orgaAddress" value="#{requestBean.request.requestor.user.affiliation.address}"/>
                            <p:message for="orgaAddress" />   

                            <p:outputLabel for="orgaUrl" value="URL: " />
                            <h:outputText style="width:300px;"  id="orgaUrl" value="#{requestBean.request.requestor.user.affiliation.url}"/>
                            <p:message for="orgaUrl" />   

                        </p:panelGrid>
                    </div>
                </p:tab>
                <p:tab id="samples" title="samples">
                    <p:inputText id="samplesData" type="hidden" widgetVar="tableData" value="#{requestBean.samples}" >    
                        <p:ajax event="change" update="@this sampleMessage :requestWizard:libraryData" oncomplete="refresh()" partialSubmit="true"/>
                    </p:inputText>
                    <p:inputText id="editable" type="hidden" widgetVar="editableSamples" value="#{requestBean.editable}" />    
                    <p:messages for="sampleMessage" id="sampleMessage" showDetail="true" closable="true" />

                    <div id="example"/>
                    <script type="text/javascript">
                        var data;
                        var $ = jQuery;
                        var table;

                        var refresh = function () {
                            data = JSON.parse(PF('tableData').getJQ().val());
                            console.log('AJAX action completed with data ' + JSON.stringify(data));
                            table.loadData(data);
                        }

                        var dataChangeCallback = function (change, source) {
                            if (source === 'loadData') {
                                return; //don't save this change
                            }
                            console.log('Setting data ' + JSON.stringify(data));
                            cleanedData = [];
                            $.each(data, function (rowKey, object) {
                                if (!table.isEmptyRow(rowKey))
                                    cleanedData.push(object);
                            });
                            PF('tableData').getJQ().val(JSON.stringify(cleanedData));
                            console.log('trigger change');
                            PF('tableData').getJQ().change();
                        }

                        $(document).ready(function () {
                            data = JSON.parse(PF('tableData').getJQ().val());
                            var container = document.getElementById('example');
                            var editable = (PF('editableSamples').getJQ().val() == 'true');
                            var settings = {
                                data: data,
                                readOnly: !editable,
                                columns: [
                                    {
                                        data: 'name',
                                        type: 'text'
                                    },
                                    {
                                        data: 'sampleDescription',
                                        type: 'text'
                                    },
                                    {
                                        data: 'organism',
                                        type: 'text'
                                    },
                                    {
                                        data: 'library',
                                        type: 'text'

                                    },
                                    {
                                        data: 'i7Index',
                                        type: 'text'
                                    },
                                    {
                                        data: 'i7Adapter',
                                        type: 'text'
                                    },
                                    {
                                        data: 'i5Index',
                                        type: 'text'
                                    },
                                    {
                                        data: 'i5Adapter',
                                        type: 'text'
                                    },
                                    {
                                        data: 'primerType',
                                        type: 'text'
                                    },
                                    {
                                        data: 'primerName',
                                        type: 'text'
                                    },
                                    {
                                        data: 'primerSequence',
                                        type: 'text'
                                    }

                                ],
                                rowHeaders: true,
                                colHeaders: ['Sample Name', 'Sample Description', 'Organism', 'Library Name', 'Barcode Sequence i7', 'Library Adapter i7', 'Barcode Sequence i5', 'Library Adapter i5', 'Sequencing Primer Type', 'Custom Sequencing Primer Name', 'Custom Sequencing Primer Sequence'],
                                contextMenu: true,
                                manualRowResize: true,
                                minSpareRows: 1,
                                afterChange: dataChangeCallback,
                                afterRemoveRow: dataChangeCallback
                            };

                            table = new Handsontable(container, settings);
                        });

                    </script>  
                </p:tab>

                <p:tab id="libraries" title="Libraries">
                    <p:inputText id="libraryData" type="hidden" widgetVar="tableDataLib" value="#{requestBean.libraries}" >    
                        <p:ajax event="change" update="@this libraryMessage :requestWizard:samplesData" oncomplete="refreshLib()" partialSubmit="true"/>
                    </p:inputText>
                    <p:inputText id="editableLibraries" type="hidden" widgetVar="editableLibraries" value="#{requestBean.editable}" />    
                    <p:messages for="libraryMessage" id="libraryMessage" showDetail="true" closable="true" />

                    <div id="exampleLib" />
                    <script type="text/javascript">
                        var dataLib;
                        var $ = jQuery;
                        var tableLib;

                        var refreshLib = function () {
                            dataLib = JSON.parse(PF('tableDataLib').getJQ().val());
                            console.log('AJAX action completed with data ' + JSON.stringify(dataLib));
                            tableLib.loadData(dataLib);
                        };

                        var dataChangeCallback = function (change, source) {
                            if (source === 'loadData') {
                                return; //don't save this change
                            }
                            console.log('Setting data ' + JSON.stringify(dataLib));
                            cleanedDataLib = [];
                            $.each(dataLib, function (rowKey, object) {
                                if (!tableLib.isEmptyRow(rowKey))
                                    cleanedDataLib.push(object);
                            });
                            PF('tableDataLib').getJQ().val(JSON.stringify(cleanedDataLib));
                            console.log('trigger change');
                            PF('tableDataLib').getJQ().change();
                        }

                        $(document).ready(function () {
                            dataLib = JSON.parse(PF('tableDataLib').getJQ().val());
                            var container = document.getElementById('exampleLib');
                            var editable = (PF('editableLibraries').getJQ().val() == 'true');
                            var settings = {
                                data: dataLib,
                                readOnly: !editable,
                                columns: [
                                    {
                                        data: 'name',
                                        type: 'text'
                                    },
                                    {
                                        data: 'applicationName',
                                        type: 'text'
                                    },
                                    {
                                        data: 'readMode',
                                        type: 'dropdown',
                                        source: ['PE', 'SR']
                                    },
                                    {
                                        data: 'readLength',
                                        type: 'numeric'
                                    },
                                    {
                                        data: 'lanes',
                                        type: 'numeric'
                                    },
                                    {
                                        data: 'volume',
                                        type: 'numeric'
                                    },
                                    {
                                        data: 'dnaConcentration',
                                        type: 'numeric'
                                    },
                                    {
                                        data: 'totalSize',
                                        type: 'numeric'
                                    }],
                                rowHeaders: true,
                                colHeaders: ['Library Name', 'Application', 'Read Mode', 'Read Length', 'Lanes', 'Volume', 'DNA Concentration', 'Total size'],
                                manualRowResize: true,
                                minSpareRows: 0,
                                afterChange: dataChangeCallback,
                                afterRemoveRow: dataChangeCallback,
                                afterCreateRow: function (index, numberOfRows) {
                                    dataLib.splice(index, numberOfRows);
                                }
                            };

                            tableLib = new Handsontable(container, settings);
                        });

                    </script>  
                </p:tab>

            </p:wizard>


        </h:form>



    </ui:define>

</ui:composition>