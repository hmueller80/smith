<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui" template="/template.xhtml">

	<ui:define name="reagentsSearch"> 

		<h:form id="reagentsTableForm">

			<p:dataTable id="reagentsTable" var="reagent"
				value="#{reagentsSearchBean.reagentsList}" widgetVar="reagentsTable"
				style="font-size: x-small;" paginator="true" rows="20"
				paginatorTemplate="{FirstPageLink} {PreviousPageLink} {RowsPerPageDropdown}
                         {CurrentPageReport} {NextPageLink} {LastPageLink}"
				emptyMessage="#{bundle['reagents.emptymessage']}" filteredValue="#{filterBean.reagent}">


				<p:column id="barcodeColumn" filterBy="#{reagent.reagentBarCode}"
					headerText="#{bundle['reagents.barcode']}"
					filterMatchMode="contains">
					<h:link target="_blank" outcome="reagentDetails.jsf">
						<f:param name="barcode" value="#{reagent.reagentBarCode}" />
						<h:outputText value="#{reagent.reagentBarCode}" />
					</h:link>
				</p:column>

				<p:column id="operatorColumn"
					filterBy="#{reagent.userByOperatorUserId.login}"
					headerText="#{bundle['reagents.operator']}"
					filterMatchMode="contains">
					<h:outputText value="#{reagent.userByOperatorUserId.login}" />
				</p:column>

				<p:column id="ownerColumn"
					filterBy="#{reagent.userByOwnerId.login}"
					headerText="#{bundle['reagents.owner']}" filterMatchMode="contains">
					<h:outputText value="#{reagent.userByOwnerId.login}" />
				</p:column>

				<p:column id="applicationColumn" filterBy="#{reagent.application}"
					headerText="#{bundle['reagents.application']}"
					filterMatchMode="contains">
					<h:outputText value="#{reagent.application }" />
				</p:column>

				<p:column id="reactionsColumn"
					headerText="#{bundle['reagents.reactions']}">
					<h:outputText
						value="#{reagent.supportedReactions 
                                           - reagent.samplerunsForClustergenerationReagentCode.size()
                                           - reagent.samplerunsForSampleprepReagentCode.size()
                                           - reagent.samplerunsForSequencingReagentCode.size()}" />
				</p:column>

				<p:column id="catalgueColumn" filterBy="#{reagent.catalogueNumber}"
					headerText="#{bundle['reagents.catalogue']}"
					filterMatchMode="contains">
					<h:outputText value="#{reagent.catalogueNumber}" />
				</p:column>

				<p:column id="receptionDateColumn"
					headerText="#{bundle['reagents.reception']}">
					<h:outputText value="#{reagent.receptionDate}" />
				</p:column>

				<p:column id="expirationDateColumn"
					headerText="#{bundle['reagents.expiration']}">
					<h:outputText value="#{reagent.expirationDate}" />
				</p:column>

				<p:column id="costCenterColumn" filterBy="#{reagent.costCenter}"
					headerText="#{bundle['reagents.cost.center']}"
					filterMatchMode="contains">
					<h:outputText value="#{reagent.costCenter}" />
				</p:column>

				<p:column id="instituteColumn" filterBy="#{reagent.institute}"
					headerText="#{bundle['reagents.institute']}"
					filterMatchMode="contains">
					<h:outputText value="#{reagent.institute}" />
				</p:column>



			</p:dataTable>
                    
                    <h:panelGrid columns="2">
                <p:panel header="#{bundle['export.All']}">
                    <h:commandLink>
                        <p:graphicImage value="/img/csv.png" />
                        <p:dataExporter type="csv" target="reagentsTable" fileName="Reagents" pageOnly="false" />
                    </h:commandLink>

                </p:panel>
                
                <p:panel header="#{bundle['export.Page']}">
                    <h:commandLink>
                        <p:graphicImage value="/img/csv.png" />
                        <p:dataExporter type="csv" target="reagentsTable" fileName="Reagents" pageOnly="true" />
                    </h:commandLink>

                </p:panel>

            </h:panelGrid> 

		</h:form>

		<p:button outcome="newReagentForm.jsf"
			value="#{bundle['button.text.new.reagent']}"
			rendered="#{reagentsSearchBean.hasNewReagentPermission()}"></p:button>


	</ui:define>

</ui:composition>